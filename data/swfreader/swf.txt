CHAPTER 4
Control Tags

SetBackgroundColor
Field	Type	Comment
Header	RECORDHEADER	Tag type = 9
BackgroundColor	RGB	Color of the display background

FrameLabel
Field	Type	Comment
Header	RECORDHEADER	Tag type = 43
Name	STRING	Label for frame

Protect
Field	Type	Comment
Header	RECORDHEADER	Tag type = 24

End
Field	Type	Comment
Header	RECORDHEADER	Tag type = 0

ExportAssets
Field	Type	Comment
Header	RECORDHEADER	Tag type = 56
Count	UI16	Number of assets to export
Tag1	UI16	First character ID to export
Name1	STRING	Identifier for first exported
		character
...		
TagN	UI16	Last character ID to export
NameN	STRING	Identifier for last exported
		character

ImportAssets
Field	Type	Comment
Header	RECORDHEADER	Tag type = 57
URL	STRING URL	where the source
		SWF file can be found
Count	UI16	Number of assets to import
Tag1	UI16	Character ID to use for first
		imported character in
		importing SWF file (need
		not match character ID in
		exporting SWF file)
Name1	STRING	Identifier for first imported
		character (must match an
		identifier in exporting SWF
		file)
...
TagN	UI16	Character ID to use for last
		imported character in
		importing SWF file
NameN	STRING	Identifier for last imported
		character

EnableDebugger
Field	Type	Comment
Header	RECORDHEADER	Tag type = 58
Password	Null-terminated STRING. (0	MD5-encrypted password
	is NULL)	

EnableDebugger2
Field	Type	Comment
Header	RECORDHEADER	Tag type = 64
Reserved	UI16	Always 0
Password	Null-terminated STRING.	MD5-encrypted password
	(0 is NULL)

ScriptLimits
Field	Type	Comment
Header	RECORDHEADER	Tag type = 65
MaxRecursionDepth	UI16	Maximum recursion depth
ScriptTimeoutSeconds	UI16	Maximum ActionScript
		processing time before
		script stuck dialog box
		displays

SetTabIndex
Field	Type	Comment
Header	RECORDHEADER	Tag type = 66
Depth	UI16	Depth of character
TabIndex	UI16	Tab order value

FileAttributes
Field	Type	Comment
Header	RECORDHEADER 	Tag type = 69
Reserved	UB[1]	Must be 0
UseDirectBlit	UB[1]	If 1, the SWF file uses hardware acceleration
		to blit graphics to the screen, where such
		acceleration is available.
		If 0, the SWF file will not use hardware
		accelerated graphics facilities.
		Minimum file version is 10.
UseGPU	UB[1]	If 1, the SWF file uses GPU compositing
		features when drawing graphics, where such
		acceleration is available.
		If 0, the SWF file will not use hardware
		accelerated graphics facilities.
		Minimum file version is 10.
HasMetadata	UB[1]	If 1, the SWF file contains the Metadata tag.
		If 0, the SWF file does not contain the
		Metadata tag.
ActionScript3	UB[1]	If 1, this SWF uses ActionScript 3.0.
		If 0, this SWF uses ActionScript 1.0 or 2.0.
		Minimum file format version is 9.
Reserved	UB[2]	Must be 0
UseNetwork	UB[1]	If 1, this SWF file is given network file access
		when loaded locally.
		If 0, this SWF file is given local file access
		when loaded locally.
Reserved	UB[24]	Must be 0

ImportAssets2
Field	Type	Comment
Header	RECORDHEADER	Tag type = 71
URL	STRING	URL where the source
		SWF file can be found
Reserved	UI8	Must be 1
Reserved	UI8	Must be 0
Count	UI16	Number of assets to import
Tag1	UI16	Character ID to use for first
		imported character in
		importing SWF file (need
		not match character ID in
		exporting SWF file)
Name1	STRING	Identifier for first imported
		character (must match an
		identifier in exporting SWF
		file)
...		
TagN	UI16	Character ID to use for last
		imported character in
		importing SWF file
NameN	STRING	Identifier for last imported
		character

SymbolClass
Field	Type	Comment
Header	RECORDHEADER	Tag type = 76
NumSymbols	UI16	Number of symbols that
		will be associated by this
		tag.
Tag1	U16	The 16-bit character tag ID
		for the symbol to associate
Name1	STRING	The fully-qualified name of
		the ActionScript 3.0 class
		with which to associate this
		symbol. The class must
		have already been
		declared by a DoABC tag.
...	...	...
TagN	U16	Tag ID for symbol N
NameN	STRING	Fully-qualified class name
		for symbol N

Metadata
Field	Type	Comment
Header	RECORDHEADER	Tag type = 77
Metadata	STRING	XML Metadata

DefineScalingGrid
Field	Type	Comment
Header	RECORDHEADER	Tag type = 78
CharacterId	UI16	ID of sprite or button
		character upon which the
		scaling grid will be applied.
Splitter	RECT	Center region of 9-slice
		grid

DefineSceneAndFrameLabelData
Field	Type	Comment
Header	RECORDHEADER	Tag type = 86
SceneCount	EncodedU32	Number of scenes
Offset1	EncodedU32	Frame offset for scene 1
Name1	STRING	Name of scene 1
...	...	...
OffsetN	EncodedU32	Frame offset for scene N
NameN	STRING	Name of scene N
FrameLabelCount	EncodedU32	Number of frame labels
FrameNum1	EncodedU32	Frame number of frame
		label #1 (zero-based,
		global to symbol)
FrameLabel1	STRING	Frame label string of frame
		label #1
...	...	...
FrameNumN	EncodedU32	Frame number of frame
		label #N (zero-based,
		global to symbol)
FrameLabelN	STRING	Frame label string of frame
		label #N

CHAPTER 8
Bitmaps

DefineBits
Field	Type	Comment
Header	RECORDHEADER (long)	Tag type = 6
CharacterID	UI16	ID for this character
JPEGData	UI8[image data size]	JPEG compressed image

JPEGTables
Field	Type	Comment
Header	RECORDHEADER	Tag type = 8
JPEGData	UI8[encoding data size]	JPEG encoding table

DefineBitsJPEG2
Field	Type	Comment
Header	RECORDHEADER (long)	Tag type = 21
CharacterID	UI16	ID for this character
ImageData	UI8[data size]	Compressed image data in
		either JPEG, PNG, or GIF89a
		format

DefineBitsJPEG3
Field	Type	Comment
Header	RECORDHEADER (long)	Tag type = 35
CharacterID	UI16	ID for this character.
AlphaDataOffset	UI32	Count of bytes in ImageData.
ImageData	UI8[data size]	Compressed image data in
		either JPEG, PNG, or GIF89a
		format
BitmapAlphaData	UI8[alpha data size]	ZLIB compressed array of
		alpha data. Only supported
		when tag contains JPEG data.
		One byte per pixel. Total size
		after decompression must
		equal (width * height) of JPEG
		image.

DefineBitsLossless
Field	Type	Comment
Header	RECORDHEADER (long)	Tag type = 20
CharacterID	UI16	ID for this character
BitmapFormat	UI8	Format of compressed data
		3 = 8-bit colormapped image
		4 = 15-bit RGB image
		5 = 24-bit RGB image
BitmapWidth	UI16	Width of bitmap image
BitmapHeight	UI16	Height of bitmap image
BitmapColorTableSize	If BitmapFormat = 3, UI8	This value is one less than the
	Otherwise absent	actual number of colors in the
		color table, allowing for up to
		256 colors.
ZlibBitmapData	If BitmapFormat = 3,	ZLIB compressed bitmap data
	COLORMAPDATA
	If BitmapFormat = 4 or 5,
	BITMAPDATA

DefineBitsLossless2
Field	Type	Comment
Header	RECORDHEADER (long)	Tag type = 36
CharacterID	UI16	ID for this character
BitmapFormat	UI8	Format of compressed data
		3 = 8-bit colormapped image
		5 = 32-bit ARGB image
BitmapWidth	UI16	Width of bitmap image
BitmapHeight	UI16	Height of bitmap image
BitmapColorTableSize	If BitmapFormat = 3, UI8	This value is one less than the
	Otherwise absent	actual number of colors in the
		color table, allowing for up to
		256 colors.
ZlibBitmapData	If BitmapFormat = 3,	ZLIB compressed bitmap data
	ALPHACOLORMAPDATA
	If BitmapFormat = 4 or 5,
	ALPHABITMAPDATA

DefineBitsJPEG4
Field	Type	Comment
Header	RECORDHEADER (long)	Tag type = 90.
CharacterID	UI16	ID for this character.
AlphaDataOffset	UI32	Count of bytes in ImageData.
DeblockParam	UI16	Parameter to be fed into the
		deblocking filter. The parameter
		describes a relative strength of
		the deblocking filter from 0-
		100% expressed in a
		normalized 8.8 fixed point
		format.
ImageData	UI8[data size]	Compressed image data in
		either JPEG, PNG, or GIF89a
		format.
BitmapAlphaData	UI8[alpha data size]	ZLIB compressed array of
		alpha data. Only supported
		when tag contains JPEG data.
		One byte per pixel. Total size
		after decompression must
		equal (width * height) of JPEG
		image.
