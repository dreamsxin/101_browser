module websockets
{
  [Constructor(in DOMString url, in optional DOMString protocols)]
  [Constructor(in DOMString url, in optional DOMString[] protocols)]
  interface WebSocket {
    readonly attribute DOMString url;
  
    // ready state
    const unsigned short CONNECTING = 0;
    const unsigned short OPEN = 1;
    const unsigned short CLOSING = 2;
    const unsigned short CLOSED = 3;
    readonly attribute unsigned short readyState;
    readonly attribute unsigned long bufferedAmount;
  
    // networking
             attribute Function onopen;
             attribute Function onmessage;
             attribute Function onerror;
             attribute Function onclose;
    readonly attribute DOMString protocol;
    void send(in DOMString data);
    void close();
  };
  WebSocket implements EventTarget;

  interface CloseEvent : Event {
    readonly attribute boolean wasClean;
    readonly attribute unsigned long code;
    readonly attribute DOMString reason;
    void initCloseEvent(in DOMString typeArg, in boolean canBubbleArg, in boolean cancelableArg, in boolean wasCleanArg, in unsigned long codeArg, in unsigned long reasonArg);
  };


};
