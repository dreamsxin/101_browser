module webstorage
{
  interface Storage {
    readonly attribute unsigned long length;
    DOMString? key(in unsigned long index);
    getter DOMString getItem(in DOMString key);
    setter creator void setItem(in DOMString key, in DOMString value);
    deleter void removeItem(in DOMString key);
    void clear();
  };

  [NoInterfaceObject]
  interface WindowSessionStorage {
    readonly attribute Storage sessionStorage;
  };
  Window implements WindowSessionStorage;

  [NoInterfaceObject]
  interface WindowLocalStorage {
    readonly attribute Storage localStorage;
  };
  Window implements WindowLocalStorage;

  interface StorageEvent : Event {
    readonly attribute DOMString key;
    readonly attribute DOMString? oldValue;
    readonly attribute DOMString? newValue;
    readonly attribute DOMString url;
    readonly attribute Storage? storageArea;
    void initStorageEvent(in DOMString typeArg, in boolean canBubbleArg, in boolean cancelableArg, in DOMString keyArg, in DOMString? oldValueArg, in DOMString? newValueArg, in DOMString urlArg, in Storage? storageAreaArg);
  };


};
