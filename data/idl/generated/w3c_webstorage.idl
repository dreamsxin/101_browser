module webstorage
{
  interface Storage {
    readonly attribute unsigned long length;
    DOMString? key(unsigned long index);
    getter DOMString getItem(DOMString key);
    setter creator void setItem(DOMString key, DOMString value);
    deleter void removeItem(DOMString key);
    void clear();
  };

  [NoInterfaceObject]
  interface WindowSessionStorage {
    readonly attribute Storage sessionStorage;
  };
  Window implements WindowSessionStorage;

  [NoInterfaceObject]
  interface WindowLocalStorage {
    readonly attribute Storage localStorage;
  };
  Window implements WindowLocalStorage;

  interface StorageEvent : Event {
    readonly attribute DOMString key;
    readonly attribute DOMString? oldValue;
    readonly attribute DOMString? newValue;
    readonly attribute DOMString url;
    readonly attribute Storage? storageArea;
    void initStorageEvent(DOMString typeArg, boolean canBubbleArg, boolean cancelableArg, DOMString keyArg, DOMString? oldValueArg, DOMString? newValueArg, DOMString urlArg, Storage? storageAreaArg);
  };


};
